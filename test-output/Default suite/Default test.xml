<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="4" hostname="IN-HYFZ9K3" failures="0" tests="13" name="Default test" time="0.104" errors="0" timestamp="2023-10-03T16:47:48 IST">
  <testcase classname="TestComp.BaseCls" name="@BeforeTest initializeDriver" time="-1.696331868751E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;platform&amp;apos; is required by BeforeTest on method initializeDriver but has not been marked @Optional or defined
in C:\Users\rohit07\AppData\Local\Temp\testng-eclipse-134280153\testng-customsuite.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'platform' is required by BeforeTest on method initializeDriver but has not been marked @Optional or defined
in C:\Users\rohit07\AppData\Local\Temp\testng-eclipse-134280153\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:270)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:358)
at org.testng.internal.Parameters.createParameters(Parameters.java:700)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:168)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:637)
at org.testng.TestRunner.beforeRun(TestRunner.java:627)
at org.testng.TestRunner.run(TestRunner.java:589)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeTest initializeDriver -->
  <testcase classname="TestComp.BaseCls" name="@AfterTest closeDriver" time="0.004">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;com.aventstack.extentreports.ExtentReports.flush()&amp;quot; because &amp;quot;TestComp.BaseCls.extent&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "com.aventstack.extentreports.ExtentReports.flush()" because "TestComp.BaseCls.extent" is null
at TestComp.BaseCls.closeDriver(BaseCls.java:87)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:637)
at org.testng.TestRunner.afterRun(TestRunner.java:877)
at org.testng.TestRunner.run(TestRunner.java:599)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @AfterTest closeDriver -->
  <testcase classname="testRun.VegetableKart" name="vegitableSearch" time="0.0">
    <skipped/>
  </testcase> <!-- vegitableSearch -->
  <testcase classname="testRun.VegetableKart" name="incrementBtnCheck" time="0.0">
    <skipped/>
  </testcase> <!-- incrementBtnCheck -->
  <testcase classname="testRun.VegetableKart" name="addToKart" time="0.0">
    <skipped/>
  </testcase> <!-- addToKart -->
  <testcase classname="testRun.VegetableKart" name="GoToCartCheck" time="0.0">
    <skipped/>
  </testcase> <!-- GoToCartCheck -->
  <testcase classname="testRun.VegetableKart" name="CheckOutCheck" time="0.0">
    <skipped/>
  </testcase> <!-- CheckOutCheck -->
  <testcase classname="testRun.VegetableKart" name="PromoFieldCheck" time="0.0">
    <skipped/>
  </testcase> <!-- PromoFieldCheck -->
  <testcase classname="testRun.VegetableKart" name="promocodeCheck" time="0.0">
    <skipped/>
  </testcase> <!-- promocodeCheck -->
  <testcase classname="testRun.VegetableKart" name="PlaceorderCheck" time="0.0">
    <skipped/>
  </testcase> <!-- PlaceorderCheck -->
  <testcase classname="testRun.VegetableKart" name="SelectCountryDropDown" time="0.0">
    <skipped/>
  </testcase> <!-- SelectCountryDropDown -->
  <testcase classname="testRun.VegetableKart" name="ClickCheckBtn" time="0.0">
    <skipped/>
  </testcase> <!-- ClickCheckBtn -->
  <testcase classname="testRun.VegetableKart" name="FinalProceedBtn" time="0.0">
    <skipped/>
  </testcase> <!-- FinalProceedBtn -->
  <testcase classname="testRun.FlightRun" name="FlightSearch" time="0.0">
    <skipped/>
  </testcase> <!-- FlightSearch -->
  <testcase classname="testRun.FlightRun" name="FlightRadio" time="0.0">
    <skipped/>
  </testcase> <!-- FlightRadio -->
  <testcase classname="TestComp.BaseCls" name="@AfterTest closeDriver" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest closeDriver -->
  <testcase classname="TestComp.BaseCls" name="@AfterTest closeDriver" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest closeDriver -->
  <testcase classname="TestComp.BaseCls" name="@BeforeTest initializeDriver" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest initializeDriver -->
  <testcase classname="TestComp.BaseCls" name="@BeforeTest initializeDriver" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest initializeDriver -->
</testsuite> <!-- Default test -->
